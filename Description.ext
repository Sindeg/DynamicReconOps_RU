#include "sunday_system\dialogs\defines.hpp"
#include "sunday_system\dialogs\dialogs.hpp"
#include "sunday_system\dialogs\dialogsMainMenu.hpp"
#include "sunday_system\dialogs\dialogsLobby.hpp"
#include "scripts\ASORVS\menu.hpp"
#include "scripts\CHVD\dialog.hpp"

enableDebugConsole = 1;
allowFunctionsLog = 1;

corpseManagerMode = 1;
corpseLimit = 1;
corpseRemovalMinTime = 360;
corpseRemovalMaxTime = 600;

respawn = 3;
respawnButton = 1;
respawnDelay = 2;
respawnVehicleDelay = 30;
respawnDialog = 0;
respawnOnStart = 0;
respawnTemplates[] = {"MenuPosition", "Tickets", "EndMission"};

class Params
{
	class Respawn
	{
		title = "Возрождение";
		values[] = {0,1,2,3,4};
		texts[] = {"Сразу", "20 Секунд", "45 Секунд", "90 Секунд", "Выкл"};
		default = 0;
	};
	class RespawnPositions
	{
		title = "Точки возрождения";
		values[] = {0,1,2};
		texts[] = {"Все", "Только штаб", "Только команда"};
		default = 1;
	};
	class role_specialization
	{
		title = "Специализации по ролям";
		values[] = {1,0};
		texts[] = {"Вкл","Выкл"};
		default = 1;
	};
	class player_markers
	{
		title = "Отметки игроков на карте";
		values[] = {1,0};
		texts[] = {"Вкл","Выкл"};
		default = 1;
	};
};

class RscTitles {
	class DRO_Splash {
		idd = -1;
		duration = 60;
		movingenable = 0;	
		class Controls {	
			class facade1: sundayText
			{
				idc = 1000;
				text = "";
				x = 0 * safezoneW + safezoneX;
				y = 0 * safezoneH + safezoneY;
				w = 0.15 * safezoneW;
				h = 1 * safezoneH;
				colorBackground[] = { 0, 0, 0, 1 };			
				fade = 0;
			};
			class facade2: sundayText
			{
				idc = 1001;
				text = "";
				x = 0.85 * safezoneW + safezoneX;
				y = 0 * safezoneH + safezoneY;
				w = 0.15 * safezoneW;
				h = 1 * safezoneH;
				colorBackground[] = { 0, 0, 0, 1 };			
				fade = 0;
			};	
			class splash: RscPicture
			{			
				idc = 1002;
				text = "images\DRO_splash_square.paa";
				x = 0.15 * safezoneW + safezoneX;
				y = 0.0 * safezoneH + safezoneY;
				w = 0.7 * safezoneW;
				h = 1 * safezoneH;
				fade = 0;
			};		
		};		
	};
};

class CfgCommunicationMenu
{   
	class heliExtract
    {
        text = "Запросить эвакуацию"; // Text displayed in the menu and in a notification
        submenu = ""; // Submenu opened upon activation (expression is ignored when submenu is not empty.)
        expression = "[_pos] execVM 'sunday_system\heliExtract.sqf'"; // Code executed upon activation
        icon = "\a3\Ui_f\data\GUI\Cfg\CommunicationMenu\transport_ca.paa"; // Icon displayed permanently next to the command menu
        cursor = "\a3\Ui_f\data\IGUI\Cfg\Cursors\iconCursorSupport_ca.paa"; // Custom cursor displayed when the item is selected
        enable = "1"; // Simple expression condition for enabling the item
        removeAfterExpressionCall = 1; // 1 to remove the item after calling
    };
	class extractLeave
    {
        text = "Эвакуация"; // Text displayed in the menu and in a notification
        submenu = ""; // Submenu opened upon activation (expression is ignored when submenu is not empty.)
        expression = "extractLeave = true; publicVariable 'extractLeave'"; // Code executed upon activation
        icon = "\a3\Ui_f\data\GUI\Cfg\CommunicationMenu\transport_ca.paa"; // Icon displayed permanently next to the command menu
        cursor = ""; // Custom cursor displayed when the item is selected
        enable = "1"; // Simple expression condition for enabling the item
        removeAfterExpressionCall = 1; // 1 to remove the item after calling
    };	
	class DRO_Support_Request_Artillery
	{
		cursor = "\A3\ui_f\data\igui\cfg\cursors\iconCursorSupport_ca.paa";
		enable = "cursorOnGround";
		expression = "[_pos] execVM 'sunday_system\supports\supportArtyComms.sqf'";
		icon = "\a3\Ui_f\data\GUI\Cfg\CommunicationMenu\artillery_ca.paa";
		text = "Artillery strike";		
	};
	class DRO_Support_Request_CAS_Bombing
	{
		cursor = "\A3\ui_f\data\igui\cfg\cursors\iconCursorSupport_ca.paa";
		enable = "cursorOnGround";
		expression = "[_pos] execVM 'sunday_system\supports\supportCASHeli.sqf'";
		icon = "\a3\Ui_f\data\GUI\Cfg\CommunicationMenu\cas_ca.paa";
		text = "CAS (bombing run)";	
	};
	class DRO_Support_Request_CAS_Heli
	{
		cursor = "\A3\ui_f\data\igui\cfg\cursors\iconCursorSupport_ca.paa";
		enable = "cursorOnGround";
		expression = "[_pos] execVM 'sunday_system\supports\supportCASHeli.sqf'";
		icon = "\a3\Ui_f\data\GUI\Cfg\CommunicationMenu\casheli_ca.paa";
		text = "CAS (helicopter attack)";
		removeAfterExpressionCall = 1;
	};
	class DRO_Support_Request_Drop
	{
		cursor = "\A3\ui_f\data\igui\cfg\cursors\iconCursorSupport_ca.paa";
		enable = "cursorOnGround";
		expression = "[_pos] execVM 'sunday_system\supports\heliDrop.sqf'";
		icon = "\a3\Ui_f\data\GUI\Cfg\CommunicationMenu\supplydrop_ca.paa";
		text = "Supply drop";
		removeAfterExpressionCall = 1;
	};
	class DRO_Support_Request_Transport
	{
		cursor = "\A3\ui_f\data\igui\cfg\cursors\iconCursorSupport_ca.paa";
		enable = "cursorOnGround";
		expression = "player setVariable ['BIS_SUPP_request', ['Transport', _pos]]";
		icon = "\a3\Ui_f\data\GUI\Cfg\CommunicationMenu\transport_ca.paa";
		text = "Helicopter transport";
	};
	class DRO_Friendly_Engage
	{
		cursor = "";
		enable = "1";
		expression = "DRO_beginFriendlyAssault = true; publicVariable 'DRO_beginFriendlyAssault'";
		icon = "\a3\Ui_f\data\GUI\Cfg\CommunicationMenu\attack_ca.paa";
		text = "Begin Assault";
		removeAfterExpressionCall = 1;
	};
};

class CfgDebriefing
{  
	class DROEnd_Full
	{
		title = "Миссия выполнена";
		subtitle = "";
		description = "Все задачи были полностью выполнены, что послужит дальнейшим шагом к контролю над регионом.";
		pictureBackground = "images\recon_image_notext.jpg";
		picture = "";
		pictureColor[] = {0.0,0.3,0.6,1};
	};
	class DROEnd_Partial
	{
		title = "Миссия выполнена";
		subtitle = "";
		description = "Спецоперация прошла успешно, хотя не все задачи были выполнены.";
		pictureBackground = "images\recon_image_notext.jpg";
		picture = "";
		pictureColor[] = {0.0,0.3,0.6,1};
	};
	class DROEnd_Fail
	{
		title = "Миссия провалена";
		subtitle = "";
		description = "Ни одна из задач не была выполнена, операция признана неудачной, и ваша команда была расформирована. Без контроля над этой территорией противник расширил свое влияние на регион.";
		pictureBackground = "images\recon_image_notext.jpg";
		picture = "";
		pictureColor[] = {0.5,0.4,0.4,1};
	};
	class DROEnd_FailCiv1
	{
		title = "Миссия провалена";
		subtitle = "Недопустимые жертвы среди гражданского населения";
		description = "После окончания вашей операции и подведения итогов были заданы сложные вопросы о роли вашего подразделения. Хотя в конечном итоге все, кто имел отношение к операции, избежали наказания, гибель мирного населения усложнила прогресс в регионе, и конфликт будет продолжаться.";
		pictureBackground = "images\recon_image_notext.jpg";
		picture = "";
		pictureColor[] = {0.5,0.4,0.4,1};
	};
	class DROEnd_FailCiv2
	{
		title = "Миссия провалена";
		subtitle = "Недопустимые жертвы среди гражданского населения";
		description = "Действия вашей команды в этот день были широко осуждены средствами массовой информации и властями. С гибелью мирных жителей противник получил мощный инструмент пропаганды, и ряды их армии выросли. Прогресс в направлении мирного урегулирования стал более трудным, и конфликт продлился дольше, чем кто-либо ожидал. Семьи, которые потеряли близких, потратили годы на борьбу за признание.";
		pictureBackground = "images\recon_image_notext.jpg";
		picture = "";
		pictureColor[] = {0.5,0.4,0.4,1};
	};
};

class CfgFunctions 
{
	#include "Scripts\ASORVS\cfgfunctions.hpp"
	#include "Scripts\CHVD\CfgFunctions.hpp"
	#include "furniture\func.hpp"
};

class CfgDiscordRichPresence {
    applicationID = "615348713933504523";             // Provided by discord
    defaultDetails = "discord.gg/B9Z8wBC";            // Upper text
    defaultState = "91.122.15.41";              // Lower text
    defaultLargeImageKey="img2";      // Large image
    defaultLargeImageText = "";     // Large image hover text
    defaultSmallImageKey = "";      // Small image
    defaultSmallImageText = "";     // Small image hover text
    useTimeElapsed = 1;             // Show time elapsed since the player connected (1 - true, 0 - false)
};
